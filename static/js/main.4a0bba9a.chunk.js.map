{"version":3,"sources":["context/auth/authContext.js","components/rutas/RutaPrivada.jsx","context/alertas/alertaContext.js","components/auth/Login.jsx","components/auth/NuevaCuenta.jsx","context/proyectos/proyectoContext.js","context/tareas/tareasContext.js","components/proyectos/NuevoProyecto.jsx","components/proyectos/Proyecto.jsx","components/proyectos/ListadoProyectos.jsx","components/layout/Sidebar.jsx","components/layout/BarraHeader.jsx","components/tareas/FormTareas.jsx","components/tareas/Tarea.jsx","components/tareas/ListadoTareas.jsx","components/proyectos/MisProyectos.jsx","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/ProyectoState.jsx","context/tareas/tareasReducer.js","context/tareas/TareasState.jsx","context/alertas/alertaReducer.js","context/alertas/AlertaState.jsx","context/auth/authReducer.js","config/authToken.js","context/auth/AuthState.jsx","App.js","serviceWorker.js","index.js"],"names":["authContext","createContext","RutaPrivada","Component","component","props","authcontext","useContext","AuthContext","autenticado","cargando","ObtenerUsuarioAutenticadoFn","useEffect","render","to","alertaContext","Login","AlertaContext","alerta","mostrarAlertaFn","mensaje","iniciarSesionFn","useState","email","password","usuario","setUsuario","handleChange","e","target","name","value","document","querySelector","style","display","history","push","msg","categoria","className","onSubmit","preventDefault","trim","type","id","onChange","placeholder","NuevaCuenta","registrarUsuarioFn","nombre","confirmar","length","proyectoContext","tareasContext","NuevoProyecto","proyectoStateContext","TareasContext","newProyectoForm","proyectoActual","proyectoEditar","proyectoEditarFn","actualizarProyectoFn","mostrarFormularioFn","ocultarFormularioFn","crearProyectoFn","obtenerTareasFn","nuevoProyecto","setNuevoProyecto","_id","onClick","autoFocus","Proyecto","proyecto","proyectoActualFn","ListadoProyectos","proyectos","obtenerProyectosFn","height","map","key","Sidebar","BarraHeader","cerrarSesionFn","FormTareas","tareasStateContext","actualizarTareaFn","tareaEditar","agregarTareaFn","tarea","setTarea","Tarea","obtenerTareaEditarFn","eliminarTareaFn","cambiarEstado","estado","handleClickEditar","ListadoTareas","eliminarProyectoFn","tareasProyecto","window","confirm","MisProyectos","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","respuesta","data","response","errores","mostrarMensajeFn","post","put","proyectoId","delete","console","log","Provider","YesOrNot","children","TareasState","tareasReducer","params","respuestas","tareas","tareaId","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","getItem","removeItem","authToken","defaults","headers","common","AuthState","initialState","authReducer","datos","App","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a0bba9a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// asociar el context a la variable y exportar\r\n// set context to the variable and export\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, {useContext, useEffect} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// context --\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n\r\n    // extraer datos del context\r\n    // extract data from context\r\n    const authcontext = useContext(AuthContext);\r\n    const { autenticado, cargando, ObtenerUsuarioAutenticadoFn } = authcontext;\r\n\r\n    useEffect(() => {\r\n        ObtenerUsuarioAutenticadoFn();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Route\r\n            // Si no esta autenticado y si no esta cargando, redireccionar\r\n            // If is not authenticated or if is not loading, redirect \r\n            {...props} render={ props => !autenticado && !cargando ? (\r\n                <Redirect to=\"/\" />\r\n            ): (\r\n                <Component {...props} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RutaPrivada;\r\n","import { createContext } from \"react\";\r\n\r\n// asociar el context a la variable y exportar\r\n// set context to the variable and export\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import React, {useState, useEffect, useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Context --\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nexport default function Login(props) {\r\n\r\n    // extraer datos del context\r\n    // extract data from context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlertaFn } = alertaContext;\r\n\r\n    const authcontext = useContext(AuthContext);\r\n    const { autenticado, mensaje, iniciarSesionFn } = authcontext;\r\n\r\n    // state de login\r\n    // login's state\r\n    const [usuario, setUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    // destructuring a usuario\r\n    // destructuring to usuario\r\n    const { email, password } = usuario;\r\n\r\n    // detectar cambios en el formulario y agregarlos al state\r\n    // detect changes in form and add to state\r\n    const handleChange = e => {\r\n        setUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if(usuario.email === '' || usuario.password === '') {\r\n            // si uno de los campos está vacío, ocultar btn\r\n            // if one of the parameters is empty, hide btn\r\n            document.querySelector('.btn-dinamico').style.display = \"none\";\r\n        }else {\r\n            // si todos los campos están llenos, mostrar btn\r\n            // if all the parameter are full, show btn\r\n            document.querySelector('.btn-dinamico').style.display = \"block\";\r\n        };\r\n    }, [usuario]);\r\n\r\n    // Mostrar alertas\r\n    // show alerts\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/mis-proyectos');\r\n        }\r\n        if(mensaje) {\r\n            mostrarAlertaFn( `${mensaje.msg}. (${mensaje.value})` , mensaje.categoria );\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [autenticado, mensaje, props.history]);\r\n\r\n    // si los datos estan listos, enviar\r\n    // if the data are ready, submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar datos, if estan vacios\r\n        // validate data, if there are empties\r\n        if(email.trim() === '' || password.trim() === '') {\r\n            mostrarAlertaFn('No dejes campos vacíos (Ej: \" \").', 'alert-danger');\r\n            return;\r\n        };\r\n\r\n        // log in\r\n        iniciarSesionFn({\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n                {alerta ? \r\n                    <div className={`alert ${alerta.categoria} alertas`}>\r\n                        {alerta.msg}\r\n                    </div> \r\n                : null}\r\n                <form onSubmit={handleSubmit}>\r\n                <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"far fa-envelope\"></i>                            \r\n                        </div>\r\n                        <input \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            id=\"email\"\r\n                            onChange={handleChange}\r\n                            value={email}\r\n                            placeholder=\"Tu correo\"/>\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"fas fa-lock\"></i>                        </div>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            id=\"password\"\r\n                            onChange={handleChange}\r\n                            value={password}\r\n                            placeholder=\"Tu contraseña\"/>\r\n                    </div>\r\n\r\n                    <input \r\n                        type=\"submit\"  \r\n                        className=\"btn btn-dinamico btn-primario btn-block\"\r\n                        value=\"Iniciar Sesión\"/>\r\n                </form>\r\n\r\n                <p className=\"enlace-cuenta text-muted\">\r\n                    Click \r\n                    <Link className=\"mx-2 font-weight-bold\" to={'/nueva-cuenta'}>\r\n                        Crear cuenta\r\n                    </Link>\r\n                    si no tienes una.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Context --\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nexport default function NuevaCuenta(props) {\r\n\r\n    // extraer datos del context\r\n    // extract data from context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlertaFn } = alertaContext;\r\n\r\n    const authcontext = useContext(AuthContext);\r\n    const { autenticado, mensaje, registrarUsuarioFn } = authcontext;\r\n\r\n    // state de NuevaCuenta\r\n    // NuevaCuenta's state\r\n    const [usuario, setUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    })\r\n\r\n    // destructuring a usuario\r\n    // destructuring to usuario\r\n    const { nombre, email, password, confirmar } = usuario;\r\n\r\n    // detectar cambios en el formulario y agregarlos al state\r\n    // detect changes in form and add to state\r\n    const handleChange = e => {\r\n        setUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // mostrar u ocultar btn de envio\r\n    // show or hide submit btn\r\n    useEffect(() => {\r\n        if( usuario.nombre === '' || usuario.email === '' || usuario.password === '' || usuario.confirmar === '') {\r\n            // si uno de los campos está vacío, ocultar btn\r\n            // if one of the parameters is empty, hide btn\r\n            document.querySelector('.btn-dinamico').style.display = \"none\";\r\n\r\n        }else {\r\n            // si todos los campos están llenos, mostrar btn\r\n            // if all the parameter are full, show btn\r\n            document.querySelector('.btn-dinamico').style.display = \"block\";\r\n        };\r\n    }, [usuario])\r\n\r\n    // Mostrar alertas\r\n    // show alerts\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/mis-proyectos');\r\n        }\r\n        if(mensaje) {\r\n            mostrarAlertaFn( `${mensaje.msg}. (${mensaje.value})` , mensaje.categoria );\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [autenticado, mensaje, props.history]);\r\n\r\n    // si los datos estan listos, enviar\r\n    // if the data are ready, submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        // Si los campos estan vacios, retornar null\r\n        // If the field are empties, return null\r\n        if( nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '' ) {\r\n            mostrarAlertaFn('No dejes campos vacíos (Ej: \" \").', 'alert-danger');\r\n            return;\r\n        };        \r\n        \r\n        // validar que la contraseña sea mas de 8 caracteres\r\n        // validate the password has 8 characters min\r\n        if (password.length < 8) {\r\n            mostrarAlertaFn('Contraseña muy corta.', 'alert-danger');\r\n            return;            \r\n        }\r\n\r\n        // validar que las contraseñas sean iguales\r\n        // validate if the passwords are the same\r\n        if (password !== confirmar) {\r\n            mostrarAlertaFn('Las contraseñas no son iguales.', 'alert-danger');\r\n            return;            \r\n        }\r\n\r\n        // pasarlo al action\r\n        // pass it to action\r\n        registrarUsuarioFn({\r\n            nombre,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Crear Cuenta</h1>\r\n                {alerta ? \r\n                    <div className={`alert ${alerta.categoria} alertas`}>\r\n                        {alerta.msg}\r\n                    </div> \r\n                : null}\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"far fa-user\"></i>\r\n                        </div>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"nombre\" \r\n                            id=\"nombre\"\r\n                            onChange={handleChange}\r\n                            value={nombre}\r\n                            placeholder=\"Tu nombre y primer apellido\"/>\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"far fa-envelope\"></i>                            \r\n                        </div>\r\n                        <input \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            id=\"email\"\r\n                            onChange={handleChange}\r\n                            value={email}\r\n                            placeholder=\"Tu correo\"/>\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"fas fa-unlock-alt\"></i>                        </div>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            id=\"password\"\r\n                            onChange={handleChange}\r\n                            value={password}\r\n                            placeholder=\"Tu contraseña\"/>\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <div className=\"form-icon\">\r\n                            <i className=\"fas fa-lock\"></i>                        </div>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"confirmar\" \r\n                            id=\"confirmar\"\r\n                            onChange={handleChange}\r\n                            value={confirmar}\r\n                            placeholder=\"Confirma contraseña\"/>\r\n                    </div>\r\n\r\n                    <input \r\n                        type=\"submit\"  \r\n                        className=\"btn-dinamico btn btn-primario btn-block\"\r\n                        value=\"Crear Cuenta\"/>\r\n                </form>\r\n\r\n                <p className=\"enlace-cuenta text-muted\">\r\n                    Click \r\n                    <Link className=\"mx-2 font-weight-bold\" to={'/'}>\r\n                        Iniciar Sesión\r\n                    </Link>\r\n                    si ya tienes una.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\r\n\r\n// asociar el context a la variable y exportar\r\n// set context to the variable and export\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import {createContext} from 'react';\r\n\r\n// asociar el context a la variable y exportar\r\n// set context to the variable and export\r\nconst tareasContext = createContext();\r\n\r\nexport default tareasContext;","import React, {Fragment, useEffect, useState, useContext} from 'react';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport TareasContext from '../../context/tareas/tareasContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nexport default function NuevoProyecto() {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    const tareasContext = useContext(TareasContext);\r\n    const alertaContext = useContext(AlertaContext);\r\n\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const {\r\n        newProyectoForm,\r\n        mensaje,\r\n        proyectoActual,\r\n        proyectoEditar,\r\n        proyectoEditarFn,\r\n        actualizarProyectoFn,\r\n        mostrarFormularioFn, \r\n        ocultarFormularioFn,\r\n        crearProyectoFn\r\n    } = proyectoStateContext;\r\n\r\n    const {alerta, mostrarAlertaFn} = alertaContext;\r\n\r\n    const { obtenerTareasFn} = tareasContext;\r\n\r\n    // establecer state\r\n    // set State\r\n    const [nuevoProyecto, setNuevoProyecto] = useState({\r\n        nombre : ''\r\n    });\r\n\r\n    // destructuring al estado\r\n    // destructuring to state\r\n    const { nombre } = nuevoProyecto;\r\n\r\n    // detectar cambio de proyecto y tareas\r\n    // detect if the project and tasks changed\r\n    useEffect(() => {\r\n        if(proyectoActual) {\r\n            // obtener datos a editar\r\n            // get data to edit            \r\n            setNuevoProyecto({\r\n                nombre: proyectoActual.nombre\r\n            });\r\n\r\n            // get tasks when the project change\r\n            obtenerTareasFn(proyectoActual._id);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [proyectoActual]);\r\n\r\n    useEffect(() => {\r\n        if (mensaje) {\r\n            mostrarAlertaFn(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    // Detectar cambios en el form y ver si tiene datos\r\n    // detect changes in form and watch if there is data\r\n    const handleChange = e => {\r\n        // agregar datos al state\r\n        // add data to state\r\n        setNuevoProyecto({\r\n            ...nuevoProyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n        if( e.target.value === '') {\r\n            // si el campo está vacío, ocultar btn\r\n            // if the parameter is empty, hide btn\r\n            document.querySelector('.btn-dinamico').style.display = \"none\";\r\n        }else {\r\n            // si el campo está lleno, mostrar btn\r\n            // if the parameter is full, show btn\r\n            document.querySelector('.btn-dinamico').style.display = \"block\";\r\n        };\r\n    }\r\n\r\n    // detectar si el form es enviado\r\n    // detect if the form is submited\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar form\r\n        // validate form\r\n        if(nombre.trim().length < 5 ) {\r\n            mostrarAlertaFn('El nombre es muy corto!', 'alert-warning'\r\n            );\r\n            return;\r\n        };        \r\n        // si se para editar o crear\r\n        // if is to edit or to create\r\n        if (proyectoEditar) {            \r\n            // actualizar proyecto\r\n            // update project\r\n            proyectoActual.nombre = nuevoProyecto.nombre; \r\n            actualizarProyectoFn(proyectoActual);\r\n\r\n        } else {            \r\n            // crear nuevo proyecto y agregarlo a la lista\r\n            // create new project and add it to the list\r\n            crearProyectoFn(nuevoProyecto);\r\n        }\r\n    }\r\n\r\n    // Detectar click en el componente\r\n    // Detect click in the component\r\n    const handleClickForm = e => {\r\n        e.preventDefault();\r\n        // show form\r\n        mostrarFormularioFn();\r\n        // limpiar form\r\n        // clean form\r\n        setNuevoProyecto({\r\n            nombre : ''\r\n        });\r\n        // resetear editar\r\n        // reset edit\r\n        proyectoEditarFn(false);\r\n    }\r\n    const handleClickCancel = e => {\r\n        e.preventDefault();\r\n        // hide form\r\n        ocultarFormularioFn();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                onClick={handleClickForm}\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n            >Nuevo proyecto <i className=\"fas fa-plus\"></i></button>\r\n\r\n            { newProyectoForm ? \r\n            (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className=\"formulario-nuevo-proyecto\"\r\n                >\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"col-8 newProyecto input-text\"\r\n                            placeholder=\"Nombre del proyecto\"\r\n                            name=\"nombre\"\r\n                            onChange={handleChange}\r\n                            value={nombre}\r\n                            autoFocus\r\n                            />\r\n                        <button\r\n                            onClick={handleClickCancel}\r\n                            className=\"col-2 form-icon rounded-right\"\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn-dinamico btn btn-primario btn-block\"\r\n                        value={\r\n                            proyectoEditar? \r\n                            \"Actualizar proyecto\"\r\n                            :\"Agregar proyecto\"}/>                    \r\n                </form>\r\n            ): null}\r\n\r\n            {alerta?\r\n            <div className={`alert ${alerta.categoria} alerta-responsive mt-2`}>{alerta.msg}</div>\r\n            : null}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nexport default function Proyecto({proyecto}) {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const { proyectoActualFn, proyectoEditarFn } = proyectoStateContext;\r\n\r\n    const handleClick = () => {\r\n        // se le pasa el objeto de proyecto\r\n        // it pass the proyecto's objet\r\n        proyectoActualFn(proyecto);\r\n    }\r\n\r\n    const handleClickEdit = () => {\r\n        // seleccionar proyecto\r\n        // select project\r\n        proyectoActualFn(proyecto);\r\n        // actualizar Proyecto\r\n        // update project\r\n        proyectoEditarFn(true);\r\n    }\r\n\r\n    return (\r\n        <li className=\"row m-0\">\r\n            <button\r\n                onClick={handleClick}\r\n                type=\"button\"\r\n                className=\"btn btn-blank col-10 text-left p-3\"\r\n            >\r\n            {proyecto.nombre}\r\n            </button>\r\n            <button\r\n                onClick={handleClickEdit}\r\n                type=\"button\"\r\n                className=\"col-2 p-1 border-0\" >\r\n                <i className=\"fas fa-pencil-alt\"></i>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useEffect, useContext} from 'react';\r\nimport Proyecto from './Proyecto';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\n// React Transition Group\r\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function ListadoProyectos() {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const { proyectos, obtenerProyectosFn } = proyectoStateContext;\r\n\r\n    // Obtener proyectos de la BD\r\n    // Get data from the DB\r\n    useEffect(() => {\r\n        obtenerProyectosFn();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        // si no hay proyectos, mostrar mensaje\r\n        proyectos.length === 0 \r\n        ? (\r\n            <p className=\"text-center text-muted\">No tienes proyectos</p>\r\n        )\r\n        : (\r\n            <ul className=\"listado-proyectos overflow-auto\" style={{height: '30vh'}}>\r\n                    {proyectos.map(proyecto => (\r\n                        <Proyecto\r\n                            key={proyecto._id}\r\n                            proyecto={proyecto}\r\n                        />\r\n                    ))}\r\n\r\n                {/* <TransitionGroup>\r\n                    {proyectos.map(proyecto => (\r\n                        <CSSTransition\r\n                            key={proyecto.id}\r\n                            timeout={400}\r\n                            classNames=\"proyecto\"\r\n                        >\r\n                            <Proyecto\r\n                                proyecto={proyecto}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup> */}\r\n            </ul>\r\n        )\r\n    )\r\n}\r\n","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <aside className=\"sombra-dark\">\r\n            <h1>MERN<span>Tasks</span></h1>\r\n            \r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Mis proyectos</h2>\r\n                \r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\n// Context --\r\nimport AuthContext from \"../../context/auth/authContext\";\r\n\r\nexport default function BarraHeader() {\r\n\r\n    // extraer datos del context\r\n    // extract data from context\r\n    const authcontext = useContext(AuthContext);\r\n    const { usuario, cerrarSesionFn } = authcontext;\r\n\r\n    return (\r\n        <header className=\"app-header sombra\">\r\n            <p className=\"nombre-usuario\">\r\n                Hola\r\n                <span className=\"text-capitalize\">\r\n                    {usuario? \" \"+usuario.nombre : null}\r\n                </span>\r\n            </p>\r\n\r\n            <nav className=\"nav-principal\">\r\n                <button className=\"cerrar-sesion\" onClick={() => cerrarSesionFn()}>\r\n                    <span className=\"d-none d-md-block float-left mr-2\">\r\n                        Cerrar Sesión\r\n                    </span>\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                </button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect} from 'react';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareasContext from '../../context/tareas/tareasContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nexport default function FormTareas() {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    const tareasStateContext = useContext(tareasContext);\r\n    const alertaContext = useContext(AlertaContext);\r\n\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const { proyectoActual } = proyectoStateContext;\r\n    const { \r\n        actualizarTareaFn,\r\n        tareaEditar,\r\n        agregarTareaFn,\r\n        mensaje } = tareasStateContext;\r\n    const { mostrarAlertaFn } = alertaContext;\r\n\r\n    // Establecer State\r\n    // Set state\r\n    const [tarea, setTarea] = useState({\r\n        nombre : ''\r\n    })\r\n\r\n    // detectar si se va a editar la tarea\r\n    // watch if the task it will edit\r\n    useEffect(() => {\r\n        if (tareaEditar !== null) {\r\n            setTarea(tareaEditar);\r\n        } else {\r\n            setTarea({\r\n                nombre : ''\r\n            })\r\n        }\r\n    }, [tareaEditar])\r\n\r\n    // detectar notificaciones\r\n    // detect notifications\r\n    useEffect(() => {\r\n        if (mensaje) {\r\n            mostrarAlertaFn(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    // destructuring al state del form\r\n    // destructuring to the form's state\r\n    const { nombre } = tarea;\r\n\r\n    // ver si hay un proyecto selecionado\r\n    // see if there is a proyect selected\r\n    if(proyectoActual === null ) \r\n    return <h2 className=\"text-white title mt-5\">Seleciona un proyecto, <span className=\"font-weight-normal\">para empezar.</span></h2>;\r\n\r\n    const handleChange = e => {\r\n        setTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar form\r\n        // validate form\r\n        if( nombre.trim() === ''){\r\n            mostrarAlertaFn(\"Nombre obligatorio.\", \"alert-warning\");\r\n            return null;\r\n        }\r\n\r\n        // detectar si se edita o se agrega nueva tarea\r\n        // detect if is editing or adding a new task\r\n        if (tareaEditar === null) {\r\n            //----Tarea Nueva\r\n            // Agregar al context\r\n            // add to context\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTareaFn(tarea);\r\n\r\n        } else {\r\n            //----Editando tarea\r\n            actualizarTareaFn(tarea);\r\n        }\r\n\r\n        // resetear form\r\n        // reset form\r\n        setTarea({\r\n            nombre : ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        className=\"input-text text-muted\"\r\n                        placeholder=\"Nombrar tarea\"\r\n                        value={nombre}\r\n                        name=\"nombre\"/>\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaEditar ? \"Editar tarea\" : \"Agregar tarea\"}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareasContext from '../../context/tareas/tareasContext';\r\n\r\nexport default function Tarea({tarea}) {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    const tareasStateContext = useContext(tareasContext);\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const { proyectoActual } = proyectoStateContext;\r\n    const { actualizarTareaFn, obtenerTareaEditarFn, eliminarTareaFn } = tareasStateContext;\r\n\r\n    const handleClickEditar = tarea => {\r\n        obtenerTareaEditarFn(tarea);\r\n    }\r\n    \r\n    const handleClickEliminar = id => {\r\n        // delete task\r\n        eliminarTareaFn(id, proyectoActual._id);\r\n    }\r\n\r\n    const cambiarEstado = tarea => {\r\n        if (tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true;            \r\n        }\r\n        actualizarTareaFn(tarea);\r\n    }\r\n    \r\n    return (\r\n        <li className=\"tarea sombra\">\r\n           <p className=\"m-0 font-weight-bold text-muted\">{tarea.nombre}</p>\r\n\r\n           <div className=\"estado\">\r\n                {tarea.estado\r\n                ?\r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                            className=\"completo\"\r\n                        >completo\r\n                        </button>\r\n                    )    \r\n                :\r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                            className=\"incompleto\"\r\n                        >Incompleto\r\n                        </button>\r\n                    )    \r\n                }\r\n           </div>\r\n\r\n           <div className=\"acciones\">\r\n                <button\r\n                    onClick={() => handleClickEditar(tarea)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                ><i className=\"fas fa-pencil-alt\"></i></button>\r\n\r\n                <button\r\n                    onClick={() => handleClickEliminar(tarea._id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                ><i className=\"fas fa-eraser\"></i></button>\r\n           </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, {Fragment, useContext} from 'react';\r\nimport Tarea from './Tarea';\r\n\r\n// Context --\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareasContext from '../../context/tareas/tareasContext';\r\n\r\n// react transition group\r\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function ListadoTareas() {\r\n\r\n    // Obtener el state global mediante context\r\n    // Get global State through context\r\n    const proyectoStateContext = useContext(proyectoContext);\r\n    const tareasStateContext = useContext(tareasContext);\r\n    // Extraer los datos pasados por el Context\r\n    // Get the data passed through the Context\r\n    const { proyectoActual, eliminarProyectoFn } = proyectoStateContext;\r\n    const { tareasProyecto } = tareasStateContext;\r\n\r\n    // ver si hay un proyecto selecionado\r\n    // see if there is a proyect selected\r\n    if(proyectoActual === null ) return null;\r\n\r\n    // Destructuring a los datos de proyectoActual \r\n    // Destructuring to the proyectoActual's data\r\n    const { nombre, _id } = proyectoActual;\r\n\r\n    const handleClickEliminar = () => {\r\n        if(window.confirm('¿Seguro que quieres eliminar este proyecto?'))\r\n        eliminarProyectoFn(_id);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"color3 mb-5\">\r\n                Proyecto: <span>{nombre} <i className=\"fas fa-tasks\"></i></span>\r\n            </h2>\r\n\r\n            <ul className=\"listado-tareas overflow-auto pr-3\" style={{height: '30vh'}}>\r\n                { tareasProyecto === null || tareasProyecto.length === 0 \r\n                ? (<p className=\"font-weight-bold text-muted text-center bg-light\">No hay tareas</p>)\r\n                : \r\n                    tareasProyecto.map(tarea => (\r\n                        <Tarea \r\n                            key={tarea._id}\r\n                            tarea={tarea}\r\n                        />\r\n                    ))\r\n                    // <TransitionGroup>\r\n                    //     {tareasProyecto.map(tarea => (\r\n                    //         <CSSTransition\r\n                    //             key={tarea._id}\r\n                    //             timeout={400}\r\n                    //             classNames=\"tarea\"\r\n                    //         >\r\n                    //             <Tarea\r\n                    //                 tarea={tarea}\r\n                    //             />\r\n                    //         </CSSTransition>\r\n                    //     ))}\r\n                    // </TransitionGroup>\r\n                }\r\n            </ul>\r\n\r\n            <button \r\n                onClick={handleClickEliminar}\r\n                className=\"btn btn-eliminar btn-primario btn-block\">Eliminar proyecto <i className=\"fas fa-trash\"></i></button>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport BarraHeader from '../layout/BarraHeader';\r\nimport FormTareas from '../tareas/FormTareas';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\n\r\n// Context --\r\n// import AuthContext from \"../../context/auth/authContext\";\r\n\r\nexport default function MisProyectos() {\r\n\r\n    // ESCRIBIR ESTE CODIGO DONDE QUIERAS TENER LA INFO DISPONIBLE\r\n    // // extraer datos del context\r\n    // // extract data from context\r\n    // const authcontext = useContext(AuthContext);\r\n    // const { ObtenerUsuarioAutenticadoFn } = authcontext;\r\n\r\n    // useEffect(() => {\r\n    //     ObtenerUsuarioAutenticadoFn();\r\n    //     // eslint-disable-next-line\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"contenedor-app\">\r\n            <Sidebar />\r\n            <div className=\"seccion-principal\">\r\n                <BarraHeader />\r\n                <main>\r\n                    <FormTareas />\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { ELIMINAR_PROYECTO, CREAR_PROYECTO, EDITAR_PROYECTO, PROYECTO_ACTUALIZADO,PROYECTO_SELECCIONADO, MOSTRAR_MENSAJE, OBTENER_PROYECTOS, MOSTRAR_FORMULARIO_PROYECTO, OCULTAR_FORMULARIO_PROYECTO } from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        // Dependiendo de qué Type se ejecuto, se cambia el state.\r\n        // Depending what Type is fired, the state change.\r\n        case MOSTRAR_FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                newProyectoForm : true,\r\n                mensaje: null\r\n            };\r\n        case OCULTAR_FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                newProyectoForm : false,\r\n                proyectoEditar : false\r\n            }\r\n        case OBTENER_PROYECTOS: \r\n            return{\r\n                ...state,\r\n                proyectos : action.payload\r\n            };\r\n        case MOSTRAR_MENSAJE: \r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        case CREAR_PROYECTO: \r\n            return {\r\n                ...state,\r\n                proyectos: [action.payload, ...state.proyectos],\r\n                proyectoActual : action.payload,\r\n                newProyectoForm : false\r\n            }\r\n        case EDITAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectoEditar: action.payload,\r\n                newProyectoForm: true,\r\n                mensaje: null\r\n            }\r\n        case PROYECTO_ACTUALIZADO:\r\n            return {\r\n                ...state,\r\n                newProyectoForm: false,\r\n                proyectoEditar: false\r\n            }\r\n        case PROYECTO_SELECCIONADO:\r\n            return {\r\n                ...state,\r\n                proyectoActual : action.payload,\r\n                newProyectoForm : false,\r\n                mensaje: null\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                proyectoActual : null,\r\n                newProyectoForm : false,\r\n                proyectoEditar : false,\r\n                mensaje: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// TYPES de los PROYECTOS.\r\nexport const MOSTRAR_FORMULARIO_PROYECTO = 'MOSTRAR_FORMULARIO_PROYECTO';\r\nexport const OCULTAR_FORMULARIO_PROYECTO = 'OCULTAR_FORMULARIO_PROYECTO';\r\nexport const EDITAR_PROYECTO = 'EDITAR_PROYECTO';\r\nexport const PROYECTO_ACTUALIZADO = 'PROYECTO_ACTUALIZADO'; \r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const MOSTRAR_MENSAJE = 'MOSTRAR_MENSAJE';\r\nexport const CREAR_PROYECTO = 'CREAR_PROYECTO';\r\nexport const PROYECTO_SELECCIONADO = 'PROYECTO_SELECCIONADO';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\n\r\n// TYPES de las TAREAS\r\nexport const OBTENER_TAREAS = 'OBTENER_TAREAS';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const MOSTRAR_MENSAJE_TAREA = 'MOSTRAR_MENSAJE_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const EDITAR_TAREA = 'EDITAR_TAREA';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\n\r\n// TYPES de los alertas\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\n// TYPES de la autenticación\r\nexport const REGISTRO_EXITO = 'REGISTRO_EXITO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITO = 'LOGIN_EXITO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from 'react';\r\n\r\n// Crear Context y Reducer\r\n// create Context and Reducer\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\n\r\n// Crear Types\r\n// Create Types\r\nimport { CREAR_PROYECTO, EDITAR_PROYECTO, PROYECTO_SELECCIONADO, PROYECTO_ACTUALIZADO, ELIMINAR_PROYECTO, MOSTRAR_MENSAJE, OBTENER_PROYECTOS, MOSTRAR_FORMULARIO_PROYECTO, OCULTAR_FORMULARIO_PROYECTO } from \"../../types\";\r\n\r\n// Cliente Axios\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n\r\n    // establecer state inicial\r\n    // set initial state\r\n    const initialState = {\r\n        proyectos : [],\r\n        proyectoActual : null,  \r\n        newProyectoForm : false,\r\n        proyectoEditar : false,\r\n        mensaje : null\r\n    }\r\n\r\n    // Dispatch para ejecutar las acciones\r\n    // Dispatch to run the actions\r\n    \r\n    // --- Dispatch va a ejecutar los Types, ejecutando las funciones en el Reducer\r\n    // --- Dispath going to run the Types, runing functions in the Reducer\r\n\r\n    // ==== Nota/Note ====\r\n    // Es como el useState, haciendo 'destructuring' obtiene un State y una funcion para cambiar el state, usando el hook de useReducer, pasas el Reducer y el State inicial como parametro del useReducer.\r\n    // Is like useState, using 'destructuring' it get an State and function to change the state, using useReducer's hook, pass the Reducer and initial State as useReducer's parameters. \r\n    // ===================\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n    // funciones para el CRUD\r\n    // ==== Nota/Note ===\r\n    // El Dispatch conecta con el Reducer donde se ejecutan las funciones.\r\n    // Dispatch connect to Reducer where it runs the functions-\r\n    // ==================\r\n    // show form\r\n    const mostrarFormularioFn = () => {\r\n        // se le pasa el Type\r\n        dispatch({\r\n            type : MOSTRAR_FORMULARIO_PROYECTO\r\n        })\r\n        // ---- Cuando se ejecute esta función, el Type muestra qué state cambiar, atraves del Reducer.\r\n        // ---- When it runs this function, the Type show what state change, through the Reducer.\r\n    }\r\n    // hide form\r\n    const ocultarFormularioFn = () => {\r\n        dispatch({\r\n            type : OCULTAR_FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n    // get project\r\n    const obtenerProyectosFn = async () => {\r\n        try {\r\n\r\n            // obtener datos de la BD\r\n            // Get data from DB\r\n            const respuesta = await clienteAxios.get('/api/proyectos');\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload : respuesta.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            // console.log(error);\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: error.response.data.errores[0].msg + \".\",\r\n                categoria: 'alert-danger'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);            \r\n        }\r\n    }\r\n    // create project\r\n    const crearProyectoFn = async nuevoProyecto => {\r\n        try {\r\n            // insertar datos a la BD\r\n            // insert data to DB\r\n            const respuesta = await clienteAxios.post('/api/proyectos', nuevoProyecto);\r\n            \r\n            dispatch({\r\n                type: CREAR_PROYECTO,\r\n                payload : respuesta.data.proyecto\r\n            });\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: 'alert-success'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);\r\n        } catch (error) {\r\n            // console.log(error.response.data.errores[0]);\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: error.response.data.errores[0].msg + \".\",\r\n                categoria: 'alert-danger'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);\r\n        }\r\n    }\r\n    // edit project\r\n    const proyectoEditarFn = YesOrNot => {\r\n        dispatch({\r\n            type: EDITAR_PROYECTO,\r\n            payload: YesOrNot\r\n        })\r\n    }\r\n    // update project\r\n    const actualizarProyectoFn = async proyecto => {\r\n        try {\r\n\r\n            // actualizar en BD\r\n            // update in DB\r\n            const respuesta = await clienteAxios.put(`/api/proyectos/${proyecto._id}`, proyecto);\r\n\r\n            dispatch({\r\n                type: PROYECTO_ACTUALIZADO,\r\n                payload: proyecto\r\n            });\r\n\r\n            // get the project updated \r\n            obtenerProyectosFn();\r\n\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: 'alert-info'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);            \r\n        } catch (error) {\r\n            // console.log(error.response);\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: error.response.data.errores[0].msg + \".\",\r\n                categoria: 'alert-danger'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);            \r\n        }\r\n    }\r\n    // show message\r\n    const mostrarMensajeFn = alerta => {\r\n        dispatch({\r\n            type: MOSTRAR_MENSAJE,\r\n            payload: alerta\r\n        })\r\n    }\r\n    // get selected project\r\n    const proyectoActualFn = proyecto => {\r\n        dispatch({\r\n            type : PROYECTO_SELECCIONADO,\r\n            payload : proyecto\r\n        })\r\n    }\r\n    const eliminarProyectoFn = async proyectoId => {\r\n        try {\r\n\r\n            // eliminar de BD\r\n            // delete in DB\r\n            const respuesta = await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n\r\n            dispatch({\r\n                type : ELIMINAR_PROYECTO,\r\n                payload : proyectoId\r\n            });\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: 'alert-danger'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);            \r\n        } catch (error) {\r\n            console.log(error.response);\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: \"Hubo un error al eliminar.\",\r\n                categoria: 'alert-danger'\r\n            }\r\n            // show alert\r\n            mostrarMensajeFn(alerta);            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        // pasar por value, mediante un Objeto, los datos que estaran disponibles dentro del Provider.\r\n        // Pass through value, as Object, the data that going to be able inside the Provider.\r\n        <proyectoContext.Provider\r\n            value={{\r\n                newProyectoForm : state.newProyectoForm,\r\n                proyectoEditar : state.proyectoEditar,\r\n                proyectos : state.proyectos,\r\n                proyectoActual : state.proyectoActual,\r\n                mensaje : state.mensaje,\r\n                mostrarFormularioFn, ocultarFormularioFn,\r\n                obtenerProyectosFn,\r\n                crearProyectoFn,\r\n                proyectoEditarFn,\r\n                actualizarProyectoFn,\r\n                proyectoActualFn,\r\n                eliminarProyectoFn\r\n            }}\r\n        >\r\n            {/* Para que los datos se puedan pasar por los todos los componentes hijos que tenga el Provider.  */}\r\n            {/* For data may be able to pass through all the childrens components inside the Provider. */}\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","import { \r\n    OBTENER_TAREAS,\r\n    AGREGAR_TAREA,\r\n    MOSTRAR_MENSAJE_TAREA,\r\n    ELIMINAR_TAREA,\r\n    EDITAR_TAREA,\r\n    ACTUALIZAR_TAREA\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case OBTENER_TAREAS:\r\n            return {\r\n                ...state,\r\n                tareasProyecto : action.payload,\r\n            }    \r\n        case AGREGAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto : [ action.payload , ...state.tareasProyecto ]\r\n            }\r\n        case MOSTRAR_MENSAJE_TAREA:\r\n            return {\r\n                ...state,\r\n                mensaje : action.payload\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto : state.tareasProyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto : state.tareasProyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea),\r\n                tareaEditar : null\r\n            }\r\n        case EDITAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareaEditar : action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from \"react\";\r\n\r\nimport tareasContext from \"./tareasContext\";\r\nimport tareasReducer from \"./tareasReducer\";\r\n\r\n// cliente axios\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nimport {\r\n    OBTENER_TAREAS,\r\n    AGREGAR_TAREA,\r\n    MOSTRAR_MENSAJE_TAREA,\r\n    ELIMINAR_TAREA,\r\n    EDITAR_TAREA,\r\n    ACTUALIZAR_TAREA\r\n} from \"../../types\";\r\n\r\nconst TareasState = props => {\r\n    // establecer state inicial\r\n    // set initial state\r\n    const initialState = {\r\n        tareasProyecto : [],\r\n        mensaje : null,\r\n        tareaEditar : null\r\n    }\r\n\r\n    // Dispatch para ejecutar las acciones\r\n    // Dispatch to run the actions\r\n    \r\n    // --- Dispatch va a ejecutar los Types, ejecutando las funciones en el Reducer\r\n    // --- Dispath going to run the Types, runing functions in the Reducer\r\n\r\n    // ==== Nota/Note ====\r\n    // Es como el useState, haciendo 'destructuring' obtiene un State y una funcion para cambiar el state, usando el hook de useReducer, pasas el Reducer y el State inicial como parametro del useReducer.\r\n    // Is like useState, using 'destructuring' it get an State and function to change the state, using useReducer's hook, pass the Reducer and initial State as useReducer's parameters. \r\n    // ===================\r\n    const [state, dispatch] = useReducer(tareasReducer, initialState);\r\n\r\n    // funciones para el CRUD\r\n    // ==== Nota/Note ===\r\n    // El Dispatch conecta con el Reducer donde se ejecutan las funciones.\r\n    // Dispatch connect to Reducer where it runs the functions.\r\n    // ==================\r\n    // get tasks\r\n    const obtenerTareasFn = async proyecto => {\r\n        try {\r\n            \r\n            // obtener tareas de la BD\r\n            // get tasks from DB\r\n            const respuestas = await clienteAxios.get('/api/tareas', {params: { proyecto }})\r\n\r\n            dispatch({\r\n                type : OBTENER_TAREAS,\r\n                payload : respuestas.data.tareas\r\n            });    \r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n    // add task\r\n    const agregarTareaFn = async tarea => {\r\n        try {\r\n\r\n            // guardar tarea a la BD\r\n            // save tasks in the DB\r\n            const respuesta = await clienteAxios.post('/api/tareas', tarea);\r\n            \r\n            dispatch({\r\n                type : AGREGAR_TAREA,\r\n                payload : respuesta.data.tarea\r\n            });\r\n\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: \"alert-success\"\r\n            }\r\n\r\n            // show message\r\n            mostrarMensajeFn(alerta);\r\n\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n    // delete task\r\n    const eliminarTareaFn = async (tareaId, proyecto) => {\r\n        try {\r\n\r\n            // eliminar tarea de la BD\r\n            // delete tasks in the DB\r\n            const respuesta = await clienteAxios.delete(`/api/tareas/${tareaId}`, {params : {proyecto}});\r\n\r\n            dispatch({\r\n                type : ELIMINAR_TAREA,\r\n                payload : tareaId\r\n            });\r\n\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: \"alert-danger\"\r\n            }\r\n\r\n            // show message\r\n            mostrarMensajeFn(alerta);\r\n\r\n        } catch (error) {\r\n            console.log(error.response)\r\n        }\r\n    }\r\n    // update task\r\n    const actualizarTareaFn = async tarea => {\r\n        try {\r\n\r\n            // actualizar tarea en BD\r\n            // update task in DB\r\n            const respuesta = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n\r\n            dispatch({\r\n                type : ACTUALIZAR_TAREA,\r\n                payload : respuesta.data.tarea\r\n            });\r\n\r\n            // crear alerta\r\n            // create alert\r\n            const alerta = {\r\n                msg: respuesta.data.msg + \".\",\r\n                categoria: \"alert-info\"\r\n            }\r\n\r\n            // show message\r\n            mostrarMensajeFn(alerta);\r\n\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n    // get task\r\n    const obtenerTareaEditarFn = tarea => {\r\n        dispatch({\r\n            type : EDITAR_TAREA,\r\n            payload : tarea\r\n        })\r\n    }\r\n    // show message\r\n    const mostrarMensajeFn = alerta => {\r\n        dispatch({\r\n            type: MOSTRAR_MENSAJE_TAREA,\r\n            payload: alerta\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tareasContext.Provider\r\n            value={{\r\n                tareasProyecto : state.tareasProyecto,\r\n                mensaje : state.mensaje,\r\n                tareaEditar : state.tareaEditar,\r\n                obtenerTareasFn,\r\n                agregarTareaFn,\r\n                eliminarTareaFn,\r\n                obtenerTareaEditarFn,\r\n                actualizarTareaFn\r\n            }}\r\n        >\r\n            {props.children}\r\n        </tareasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareasState; ","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default (state, action) => {\r\n    // Dependiendo de qué Type se ejecuto, se cambia el state.\r\n    // Depending what Type is fired, the state change.\r\n    switch (action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return {\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\n\r\n// Crear Context y Reducer\r\n// create Context and Reducer\r\nimport alertaContext from './alertaContext';\r\nimport alertaReducer from './alertaReducer';\r\n\r\n// Crear Types\r\n// Create Types\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\r\n\r\nconst AlertaState = props => {\r\n\r\n    // state inicial\r\n    const initialState = {\r\n        alerta : null\r\n    }\r\n\r\n    // --- Dispatch va a ejecutar los Types, ejecutando las funciones en el Reducer\r\n    // --- Dispath going to run the Types, runing functions in the Reducer\r\n\r\n    // ==== Nota/Note ====\r\n    // Es como el useState, haciendo 'destructuring' obtiene un State y una funcion para cambiar el state, usando el hook de useReducer, pasas el Reducer y el State inicial como parametro del useReducer.\r\n    // Is like useState, using 'destructuring' it get an State and function to change the state, using useReducer's hook, pass the Reducer and initial State as useReducer's parameters. \r\n    // ===================\r\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n    // FUNCIONES / FUNCTIONS\r\n    // ==== Nota/Note ===\r\n    // El Dispatch conecta con el Reducer donde se ejecutan las funciones.\r\n    // Dispatch connect to Reducer where it runs the functions.\r\n    const mostrarAlertaFn = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        })\r\n        // Despues de 3s ocular alerta\r\n        // After 3s hide alert\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 3000);\r\n    }\r\n    \r\n    return (\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlertaFn\r\n            }}\r\n        >\r\n            {/* Para que los datos se puedan pasar por los todos los componentes hijos que tenga el Provider.  */}\r\n            {/* For data may be able to pass through all the childrens components inside the Provider. */}\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AlertaState;","import {\r\n    REGISTRO_EXITO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    // Dependiendo de qué Type se ejecuto, se cambia el state.\r\n    // Depending what Type is fired, the state change.\r\n    switch (action.type) {\r\n        case REGISTRO_EXITO:\r\n        case LOGIN_EXITO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                token: localStorage.getItem('token'),\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                autenticado: null,\r\n                usuario: null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst authToken = token => {\r\n    // si hay token\r\n    // if there is token\r\n    if (token) {\r\n        // asignar token al header\r\n        // asign token to header\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        // eliminar token del header\r\n        // delete token from header\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default authToken;","import React, { useReducer } from 'react';\r\n\r\n// Crear Context y Reducer\r\n// create Context and Reducer\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\n\r\n// Crear Types\r\n// Create Types\r\nimport { \r\n    REGISTRO_EXITO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\n// AXIOS\r\nimport clienteAxios from '../../config/axios';\r\nimport authToken from '../../config/authToken';\r\n\r\nconst AuthState = props => {\r\n\r\n    // state inicial\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    // --- Dispatch va a ejecutar los Types, ejecutando las funciones en el Reducer\r\n    // --- Dispath going to run the Types, runing functions in the Reducer\r\n\r\n    // ==== Nota/Note ====\r\n    // Es como el useState, haciendo 'destructuring' obtiene un State y una funcion para cambiar el state, usando el hook de useReducer, pasas el Reducer y el State inicial como parametro del useReducer.\r\n    // Is like useState, using 'destructuring' it get an State and function to change the state, using useReducer's hook, pass the Reducer and initial State as useReducer's parameters. \r\n    // ===================\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // funciones\r\n    // ==== Nota/Note ===\r\n    // El Dispatch conecta con el Reducer donde se ejecutan las funciones.\r\n    // Dispatch connect to Reducer where it runs the functions.\r\n    const registrarUsuarioFn = async datos => {\r\n        try {\r\n\r\n            // consultar BD\r\n            // request DB\r\n            const respuesta = await clienteAxios.post('api/usuarios', datos);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITO,\r\n                payload: respuesta.data\r\n            });\r\n            \r\n            // get authenticated user\r\n            ObtenerUsuarioAutenticadoFn();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            // crear Alerta que sera mostrado\r\n            // create alert to be shown\r\n            const alerta = {\r\n                msg: error.response.data.errores[0].msg,\r\n                categoria: 'alert-danger',\r\n                value: error.response.data.errores[0].value\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // get authenticated user\r\n    const ObtenerUsuarioAutenticadoFn = async () => {\r\n        // obtener token del LS\r\n        // get token from LS\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token) {\r\n            // enviar token al backend por headers\r\n            // send token to backend throu header\r\n            authToken(token);\r\n        }\r\n\r\n        try {\r\n            // obtener datos del usuario\r\n            // get user's data\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    const iniciarSesionFn = async datos => {\r\n        try {\r\n            // consultar BD\r\n            // request DB\r\n            const respuesta = await clienteAxios.post('api/auth', datos);\r\n\r\n            dispatch({\r\n                type: LOGIN_EXITO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            // get authenticated user\r\n            ObtenerUsuarioAutenticadoFn();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            // crear Alerta que sera mostrado\r\n            // create alert to be shown\r\n            const alerta = {\r\n                msg: error.response.data.errores[0].msg,\r\n                categoria: 'alert-danger',\r\n                value: error.response.data.errores[0].value\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    // log out\r\n    const cerrarSesionFn = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuarioFn,\r\n                ObtenerUsuarioAutenticadoFn,\r\n                iniciarSesionFn,\r\n                cerrarSesionFn\r\n            }}\r\n        >\r\n            {props.children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthState;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport MisProyectos from './components/proyectos/MisProyectos';\n\n// Context ----\nimport ProyectoState from './context/proyectos/ProyectoState';\nimport TareasState from './context/tareas/TareasState';\nimport AlertaState from './context/alertas/AlertaState';\nimport AuthState from './context/auth/AuthState';\n\n// config\nimport authToken from './config/authToken';\n\n// ver si hay token\n// watch if there is token\nconst token = localStorage.getItem('token');\nif (token) {\n  // si hay token, enviar al header\n  // if there is token, send to header\n  authToken(token);\n}\n\nfunction App() {\n\n  return (\n    <ProyectoState>\n      <TareasState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/mis-proyectos\" component={MisProyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareasState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}